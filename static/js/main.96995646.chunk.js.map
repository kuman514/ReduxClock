{"version":3,"sources":["features/clock/Clock.module.css","features/clock/ClockFace.js","features/clock/ClockHourHand.js","features/clock/ClockMinuteHand.js","features/clock/ClockSecondHand.js","features/clock/Clock.js","features/clocktooltip/ClockTooltip.js","App.js","app/store.js","serviceWorker.js","index.js","features/clocktooltip/ClockTooltip.module.css"],"names":["module","exports","ClockFace","className","styles","clockFace","Array","from","length","_","i","map","item","style","WebkitTransform","clockSelector","state","hour","date","getHours","minute","getMinutes","second","getSeconds","ClockHourHand","curState","useSelector","minuteDegree","hourDegree","clockHand","hourHandHead","hourHandTail","ClockMinuteHand","minuteHandHead","minuteHandTail","ClockSecondHand","secondHandHead","secondHandTail","onMouseHover","dispatchMousePos","event","hoverArea","type","payload","clientX","clientY","Clock","useDispatch","clock","onMouseEnter","onMouseMove","onMouseLeave","clockTooltipPosSelector","x","position","y","visible","ClockTooltip","String","padStart","dspHour","dspMin","dspSec","clockTooltip","hidden","left","bottom","window","innerHeight","App","dispatch","setInterval","initState","Date","store","createStore","action","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96995646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__3W_xr\",\"clockFace\":\"Clock_clockFace__1Fhof\",\"clockHand\":\"Clock_clockHand__2ycCW\",\"hourHandHead\":\"Clock_hourHandHead__3mSaH\",\"hourHandTail\":\"Clock_hourHandTail__3bMc6\",\"minuteHandHead\":\"Clock_minuteHandHead__3cj4i\",\"minuteHandTail\":\"Clock_minuteHandTail__1RDjM\",\"secondHandHead\":\"Clock_secondHandHead__Po8br\",\"secondHandTail\":\"Clock_secondHandTail__2Orv-\"};","import React from 'react';\r\nimport styles from './Clock.module.css';\r\n\r\nexport function ClockFace() {\r\n  return (\r\n    <div className={styles.clockFace}>\r\n        {\r\n          Array.from(\r\n            { length: 12 },\r\n            (_, i) => i\r\n          ).map((item) => {\r\n            return (\r\n              <div\r\n                className={styles.clockFace}\r\n                style={{\r\n                  WebkitTransform: `rotate(${30 * item}deg)`\r\n                }}\r\n              >\r\n                { (item === 0 ? 12 : item) }\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './Clock.module.css';\r\n\r\nfunction clockSelector(state) {\r\n  return {\r\n    hour: state.date.getHours(),\r\n    minute: state.date.getMinutes(),\r\n    second: state.date.getSeconds()\r\n  };\r\n}\r\n\r\nexport function ClockHourHand() {\r\n  const curState = useSelector(clockSelector);\r\n\r\n  const minuteDegree = curState.minute * 60 + curState.second;\r\n  const hourDegree = (curState.hour % 12) * 3600 + minuteDegree;\r\n\r\n  return (\r\n    <div className={styles.clockHand} style={{\r\n      WebkitTransform: `rotate(${360 * (hourDegree / 43200)}deg)`\r\n    }}>\r\n      <div className={styles.hourHandHead}>\r\n      </div>\r\n      <div className={styles.hourHandTail}>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './Clock.module.css';\r\n\r\nfunction clockSelector(state) {\r\n  return {\r\n    minute: state.date.getMinutes(),\r\n    second: state.date.getSeconds()\r\n  };\r\n}\r\n\r\nexport function ClockMinuteHand() {\r\n  const curState = useSelector(clockSelector);\r\n\r\n  const minuteDegree = curState.minute * 60 + curState.second;\r\n\r\n  return (\r\n    <div className={styles.clockHand} style={{\r\n      WebkitTransform: `rotate(${360 * (minuteDegree / 3600)}deg)`\r\n    }}>\r\n      <div className={styles.minuteHandHead}>\r\n      </div>\r\n      <div className={styles.minuteHandTail}>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './Clock.module.css';\r\n\r\nfunction clockSelector(state) {\r\n  return {\r\n    second: state.date.getSeconds()\r\n  };\r\n}\r\n\r\nexport function ClockSecondHand() {\r\n  const curState = useSelector(clockSelector);\r\n\r\n  return (\r\n    <div className={styles.clockHand} style={{\r\n      WebkitTransform: `rotate(${360 * (curState.second / 60)}deg)`\r\n    }}>\r\n      <div className={styles.secondHandHead}>\r\n      </div>\r\n      <div className={styles.secondHandTail}>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styles from './Clock.module.css';\r\n\r\nimport { ClockFace } from './ClockFace';\r\nimport { ClockHourHand } from './ClockHourHand';\r\nimport { ClockMinuteHand } from './ClockMinuteHand';\r\nimport { ClockSecondHand } from './ClockSecondHand';\r\n\r\nfunction onMouseHover(dispatchMousePos, event, hoverArea) {\r\n  dispatchMousePos({\r\n    type: 'POSITION_UPDATE',\r\n    payload: [event.clientX, event.clientY, hoverArea]\r\n  });\r\n}\r\n\r\nexport function Clock() {\r\n  const dispatchMousePos = useDispatch();\r\n\r\n  return (\r\n    <div\r\n      className={styles.clock}\r\n      onMouseEnter={(event) => {\r\n        onMouseHover(dispatchMousePos, event, true);\r\n      }}\r\n      onMouseMove={(event) => {\r\n        onMouseHover(dispatchMousePos, event, true);\r\n      }}\r\n      onMouseLeave={(event) => {\r\n        onMouseHover(dispatchMousePos, event, false);\r\n      }}\r\n    >\r\n      <ClockFace />\r\n      <ClockHourHand />\r\n      <ClockMinuteHand />\r\n      <ClockSecondHand />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './ClockTooltip.module.css';\r\n\r\nfunction clockTooltipPosSelector(state) {\r\n  return {\r\n    hour: state.date.getHours(),\r\n    minute: state.date.getMinutes(),\r\n    second: state.date.getSeconds(),\r\n    x: state.position[0],\r\n    y: state.position[1],\r\n    visible: state.position[2]\r\n  };\r\n}\r\n\r\nexport function ClockTooltip() {\r\n  const curState = useSelector(clockTooltipPosSelector);\r\n\r\n  const [dspHour, dspMin, dspSec] = [\r\n    String(curState.hour).padStart(2, '0'),\r\n    String(curState.minute).padStart(2, '0'),\r\n    String(curState.second).padStart(2, '0')\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className={styles.clockTooltip + ` ${curState.visible ? '' : styles.hidden}`} style={{\r\n        left: curState.x,\r\n        bottom: window.innerHeight - curState.y\r\n      }}\r\n    >\r\n      { `${dspHour}:${dspMin}:${dspSec}` }\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Clock } from './features/clock/Clock';\nimport { ClockTooltip } from './features/clocktooltip/ClockTooltip';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  setInterval(() => {\n    dispatch({type: 'DATE_UPDATE'});\n  }, 1000);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Clock />\n        <ClockTooltip />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initState = {\n  date: new Date(),\n  position: [0, 0, false]\n};\n\nexport const store = createStore((state = initState, action) => {\n  switch (action.type) {\n    case 'DATE_UPDATE':\n      return {\n        ...state,\n        date: new Date()\n      };\n    case 'POSITION_UPDATE':\n      return {\n        ...state,\n        position: action.payload\n      };\n    default:\n      return state;\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockTooltip\":\"ClockTooltip_clockTooltip__2Jnfm\",\"hidden\":\"ClockTooltip_hidden__3GocI\"};"],"sourceRoot":""}